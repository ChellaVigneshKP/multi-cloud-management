spring.application.name=config-server
server.port=6063
spring.profiles.active=git, vault

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Eureka Instance Configuration
#eureka.client.service-url.defaultZone=https://localhost:8761/eureka/
#eureka.instance.secure-port-enabled=true
#eureka.instance.non-secure-port-enabled=false
#eureka.instance.secure-port=${server.port}
#eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.hostname}:${server.port}
#eureka.instance.status-page-url=https://${spring.cloud.client.hostname}:${server.port}/actuator/info
#eureka.instance.health-check-url=https://${spring.cloud.client.hostname}:${server.port}/actuator/health
#eureka.instance.home-page-url=https://${spring.cloud.client.hostname}:${server.port}/

spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.scheme=http
spring.cloud.consul.discovery.register=true
spring.cloud.consul.discovery.enabled=true
spring.cloud.consul.discovery.instance-id=${spring.application.name}:${spring.cloud.client.hostname}:${server.port}
spring.cloud.consul.discovery.acl-token=${CONFIG_CONSUL_ACL_TOKEN}
spring.cloud.consul.discovery.port=${server.port}
spring.cloud.consul.discovery.scheme=https
spring.cloud.consul.discovery.health-check-path=/actuator/health

# SSL Configuration (use PKCS12 instead of JKS)
server.ssl.enabled=true
server.ssl.key-store-type=PKCS12
server.ssl.key-store=${CONFIG_SSL_KEYSTORE_PATH}
server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD}
server.ssl.key-alias=${CONFIG_SSL_KEYSTORE_ALIAS}
server.ssl.trust-store=classpath:certs/consul-truststore.p12
server.ssl.trust-store-password=${SSL_KEYSTORE_PASSWORD}
server.ssl.trust-store-type=PKCS12
#server.ssl.client-auth=need

#Vault Configuration
spring.cloud.vault.uri=https://vault.chellavignesh.com
spring.cloud.config.server.vault.scheme=https
spring.cloud.vault.authentication=approle
spring.cloud.vault.kv.enabled=true
spring.cloud.vault.kv.backend=secret
spring.cloud.vault.kv.default-context=config-server
spring.config.import=vault://
spring.cloud.vault.app-role.role-id=${VAULT_ROLE_ID}
spring.cloud.vault.app-role.secret-id=${VAULT_SECRET_ID}
spring.cloud.config.server.vault.order=1
spring.cloud.config.server.vault.authentication=approle
spring.cloud.config.server.vault.backend=secret
spring.cloud.config.server.vault.kv-version=2
spring.cloud.config.server.vault.app-role.role-id=${VAULT_ROLE_ID}
spring.cloud.config.server.vault.app-role.secret-id=${VAULT_SECRET_ID}

spring.cloud.config.server.git.uri=https://github.com/ChellaVigneshKP/config-server.git
spring.cloud.config.server.git.clone-on-start=true
spring.cloud.config.server.git.username=${git.username}
spring.cloud.config.server.git.password=${git.passwordtoken}
spring.cloud.config.server.git.default-label=main
spring.cloud.config.server.git.search-paths=admin-server,auth-service,service-registry,api-gateway,common
spring.cloud.config.server.git.order=2

#Encryption Configuration
encrypt.key-store.type=PKCS12
encrypt.key-store.location=${ENCRYPT_KEYSTORE_PATH}
# Change the path on runtime to the actual keystore path
encrypt.key-store.password=${ENCRYPT_KEYSTORE_PASSWORD}
encrypt.key-store.alias=${ENCRYPT_KEYSTORE_ALIAS}

#Security Configuration
spring.security.default.user.name=${SECURITY_USER_NAME}
spring.security.default.user.password=${SECURITY_USER_PASSWORD}
spring.security.advanced.user.name=${SECURITY_ADMIN_NAME}
spring.security.advanced.user.password=${SECURITY_ADMIN_PASSWORD}
spring.security.advanced.user.roles=${SECURITY_ADMIN_ROLE}

# RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=${RABBITMQ_USERNAME}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}
spring.cloud.bus.enabled=true